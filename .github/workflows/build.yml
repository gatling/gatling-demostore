name: build

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Cache Maven
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Docker build
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: demostore
          DEMOSTORE_VERSION: ${{ env.GITHUB_REF_SLUG }} # branch name
        run: |
          docker build \
            --tag $ECR_REGISTRY/$ECR_REPOSITORY:$DEMOSTORE_VERSION \
            --file Dockerfile \
            .

      - name: Docker push
        if: ${{ env.GITHUB_REF_SLUG == 'master' }}
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: demostore
          DEMOSTORE_VERSION: ${{ env.GITHUB_REF_SLUG }} # branch name
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$DEMOSTORE_VERSION
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$DEMOSTORE_VERSION $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
